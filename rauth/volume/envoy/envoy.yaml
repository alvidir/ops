admin:
  address:
    socket_address: {address: 0.0.0.0, port_value: ${ENVOY_ADMIN_PORT}}

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: {address: 0.0.0.0, port_value: ${ENVOY_ENTRY_PORT}}
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: 
                  prefix: "/"
                  grpc:
                route:
                  cluster: rauth_service
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers:  keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,grpc-status-details-bin,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,authorization
                expose_headers: grpc-status-details-bin,grpc-status,grpc-message,authorization
                max_age: "1728000"
          http_filters:
          - name: envoy.filters.http.grpc_web
          - name: envoy.filters.http.cors
          - name: envoy.filters.http.router
  clusters:
  - name: rauth_service
    type: logical_dns
    connect_timeout: 0.25s
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: rauth_service
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address: {address: rauth-grpc, port_value: ${GRPC_SERVICE_PORT}}
